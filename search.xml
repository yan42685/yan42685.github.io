<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[入坑编程的那些日子]]></title>
    <url>%2Fpost%2Fce9e2b05.html</url>
    <content type="text"><![CDATA[流水账，想到哪里写到哪里…初次接触高中时玩剑网三花了不少时间，里面有个宏系统，可以用预设的语法来描述角色的行为，编写宏可以视作是非常简单的编程活动了。这里简单描述一下剑网三中的宏。最主要使用的是/cast [条件1&amp;条件2|条件3] 技能名/use [条件1&amp;条件2|条件3] 道具名点击查看详细编写规则官方为了防止超级宏的出现完全替代手动按技能的玩法，于是限制了每一个宏文本最多128字符。宏可以绑定到一个快捷键上，本质上就是一个用if语句组成的函数，按一次快捷键相当于执行一次函数。由于不同技能的CD和对DPS（damage per second）的贡献不同，技能间的伤害加成条件也不尽相同，那么如何在128字符内实现DPS尽可能高的技能循环就有一定的研究空间了，随着游戏版本更新带来的技能调整，BOSS机制的变化，这些都让最好用的宏只适用于某一版本，而不至于一劳永逸。于是编写宏和别人比较其理论上的DPS高低也成了一种很有意思的玩法。为了减少宏文本最多128字符带来的限制，首先可以考虑制作辅助宏，即将没有GCD(global cooldown)的不产生伤害的技能和物品使用判断条件写在其中，并使用按键精灵持续执行宏命令。然后手动执行主要的技能输出宏，因为有些副本需要停止攻击一段时间所以不是所有的技能输出宏都适合挂在按键精灵上。我当时玩的门派是苍云，主要研究其铁骨衣心法(Tank心法)的宏，一共写了两个辅助宏和一个刀姿态输出宏一个盾姿态输出宏，由于铁骨衣心法寒甲奇穴带来的超高攻击力加成(自身拆招值的50%)，铁骨衣心法的输出一般在第一梯队。记得在剑胆琴心版本自己写的铁骨衣宏输出接近理论输出的极限，有时DPS是团队第二的两倍:)那时为了写一个不错的宏，我可以连续修改并测试几千次还觉得十分有趣，那时我就觉得，以后应该会喜欢上写代码的感觉吧(事实果然如此)大一前的那个暑假综述很幸运，我意识到了这个暑假是我一生中少有的可自由支配的大段时光，我打算让这段时间的价值最大化。仅仅是学习知识可能是不够的，也许更应该做些事情提高学习的速度。这个假期主要做了以下几件事：挑选软硬件设施工欲善其事必先利其器，打造一个舒适的学习环境很有必要。硬件方面赛睿Rival300S鼠标(不过好像感受不出来和之前的附赠的鼠标手感有什么区别)Cherry3494白色静音红轴(大一下用Leopold FC980M PD 石墨青红轴替代，石墨青是真的好看，98配列+窄边框也比3494看起来精致了不少)软件方面火绒安全(附带的去弹窗功能很好用)Listary：软件快速启动+文件搜索，从此可以清理桌面上的大批快捷方式而只留几个文件夹了f.lux 调节屏幕色温从而缓解眼部疲劳(色温从6500K降到4000K之后，眼睛长时间看着屏幕不那么累了)坚果云：同步桌面文件，方便手机端查看和修改一些文档SSR：kexue上网~SumatraPDFonenote 功能比印象笔记和有道云笔记全面得多欧陆词典：手机上也用的这个PotPlayer 视频播放器Honeyview 图片查看器Bandizip 没有WinRAR的广告，图标比7-zip好看…Snipaste：附带的贴图功能很棒ditto 保存剪切板历史记录QTTabBar：增强资源管理器，比如文件夹和图片预览，像浏览器一样打开多个标签页Chrome，这里列一下好用的插件(体验很多华而不实的插件后留下来的)ublock：占用内存比adblock低OneTab：我用来当做临时书签栈The Greater Suspender：相当于自动挂起长时间未查看的网页，节约内存Chrono Download ManagerNimbus Screenshot：特性是支持滚动截屏SmoothScroll 更顺滑的滚动，可能更多的是心理作用…GitZip 可以选择性下载GitHub的单个或多个文件Octotree 方便浏览GitHub的仓库内文件OctoLinkerTampermonkeyWikiwand 读维基百科变成一种享受了Surfingkeys 加入类vim操作，减少鼠标的使用学了一些小技能盲打：每天练习几个小时，一周即可适应双拼：用的小鹤双拼方案，后来又打算学双形的，发现双形要练好太花时间而且性价比低就放弃了Vim编辑方式：最初是在Pycharm和Chrome浏览器上用的Vim模拟器，用着用着就熟悉了，可以极大减少鼠标/触摸板的使用了Git：尝到了版本管理的甜头，不怕代码被改的乱七八糟回不到原样了了解了下Spacevim和Spacemacs，在Spacemacs配置上花了不少时间，第一次认真研究的官方文档就是Spacemacs了，最后还是觉得花大量时间在配置和学习Emacs上划不来，改用IDE+VSCode了正经的学习Linux的基础使用在学堂在线上学了一遍微积分和线性代数，从第一节课开始证明各种定理，一直证明到课程结束…还好到了学校之后没有那么高的证明要求跟着廖雪峰的教程学了一遍Python3，期间也看了一些乱七八糟的Python书和教程，不过感觉跟着廖雪峰学得东西最多，虽然有些东西比如网络编程因为缺乏背景知识难以理解，但还是靠想象+强行记忆过了一遍（雾）总结感觉暑假就是各方面都接触了一点，但并未学到特别多硬核的知识…好在明白了以后需要着重学什么（数学，英语，专业课），不急着深入研究（语言细节和框架）。大一上军训期间（2周）趁着休息的间隙用手机翻完了一遍PDF版K&amp;R的《C程序设计语言》速度快得我都很惊讶哈哈，就这么粗暴地入门了C语言，很多地方一知半解，算是囫囵吞枣吧空闲时间看完了《编码：隐匿在计算机软硬件背后的语言》MIT的6.001x Python计算机科学导论，看了廖雪峰的Python教程后感觉这门课教的东西并没有想象的那么好看完了《C语言程序设计现代方法》才知道原来教材可以写得如此美妙，自此打下了不错的C语言基础在学校各种水课上看完了SICP英文版前三章，就感觉书的文本内容不难，但是题目很难…第四章不知道为啥看不下去了，等以后看完CSAPP再回来看寒假放假前把《C++Primer》第五版看了一遍，有了Python和C的基础，这本书看起来并不觉得难，只是知识点太繁杂了而已大一上还是过得很充实的，不过代码量太少了。感觉自己学编程比周围同学们轻松一些，兴趣使然吧。SICP看了前三章并没有很惊艳的感觉，反而觉得那些概念都很自然，是符合直觉的，不知道为什么会这样…大一寒假打游戏摸鱼去了，自我检讨…大一下前几周还沉浸在摸鱼的状态中。再这样下去会越来越咸鱼的，感觉得做点什么，就报名了微信的小游戏开发大赛，花几天熟悉了下简单的HTML+CSS，然后花了一周学习CocosCreator的使用就猜着JavaScript的语法开干了，打算做一个联网的棋类游戏，然而服务器部分我完全不会做啊…找了各种CocosCreator联网游戏开发教学视频，并没太大作用。峰回路转，我无意中发现Matchvs提供了联网游戏解决方案整合在了CocosCreator中，؏؏☝ᖗ乛◡乛ᖘ☝؏؏ 真是解决了燃眉之急啊。吭哧吭哧写着代码，终于参照Matchvs示例实现联网匹配功能之后发现…加上各种依赖包之后，纯代码构建打包都接近8M，加上各种资源上就超过8M没法上传到微信平台…时值我要期中考试需要分精力复习数学，就把这项目搁置下来了。考完之后也对这个项目有些意兴阑珊，反正该学的都学到了，就战略性放弃了这个项目…第一次写个人项目宣告失败，不过学到了不少东西，至少知道游戏引擎怎么用了，以及手机游戏是怎么开发出来的。另外我在这个过程中顺便把邓俊辉老师的《数据结构》网课过了一遍，收获不少，也找回了学习编程的节奏了XD然后在五月中旬开始学Java，已看完《Java核心技术卷1》大一暑假因为恋情出现了点问题还有其他奇奇怪怪的麻烦，耽误了不少学习时间，只看完了王爽的《汇编语言》和 Sedgewick的《Algorithm 4》，用扇贝单词刷完了一遍六级和雅思词汇大二上目前进度：《CSAPP》看了一大半学习了JavaWeb基础知识，SSM，SpirngBoot做了一些leetcode题目未完待续]]></content>
      <categories>
        <category>生活</category>
      </categories>
  </entry>
</search>
